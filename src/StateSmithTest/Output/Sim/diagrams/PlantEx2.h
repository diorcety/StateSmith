// Autogenerated with StateSmith.
// Algorithm: Balanced1. See https://github.com/StateSmith/StateSmith/wiki/Algorithms

#if !defined(PLANTEX2_H)
#define PLANTEX2_H
#include <stdint.h>

typedef enum PlantEx2_EventId
{
    PlantEx2_EventId_EV2 = 0,
    PlantEx2_EventId_EVCONFIG = 1,
    PlantEx2_EventId_EVNEWVALUE = 2,
    PlantEx2_EventId_EVNEWVALUEREJECTED = 3,
    PlantEx2_EventId_EVNEWVALUESAVED = 4,
} PlantEx2_EventId;

enum
{
    PlantEx2_EventIdCount = 5
};

typedef enum PlantEx2_StateId
{
    PlantEx2_StateId_ROOT = 0,
    PlantEx2_StateId_NOTSHOOTING = 1,
    PlantEx2_StateId_CONFIGURING = 2,
    PlantEx2_StateId_NEWVALUEPREVIEW = 3,
    PlantEx2_StateId_STATE1 = 4,
    PlantEx2_StateId_STATE2 = 5,
    PlantEx2_StateId_NEWVALUESELECTION = 6,
    PlantEx2_StateId_IDLE = 7,
} PlantEx2_StateId;

enum
{
    PlantEx2_StateIdCount = 8
};


// Generated state machine
// forward declaration
typedef struct PlantEx2 PlantEx2;

// event handler type
typedef void (*PlantEx2_Func)(PlantEx2* sm);

// State machine constructor. Must be called before start or dispatch event functions. Not thread safe.
void PlantEx2_ctor(PlantEx2* sm);

// Starts the state machine. Must be called before dispatching events. Not thread safe.
void PlantEx2_start(PlantEx2* sm);

// Dispatches an event to the state machine. Not thread safe.
void PlantEx2_dispatch_event(PlantEx2* sm, PlantEx2_EventId event_id);

// Thread safe.
char const * PlantEx2_state_id_to_string(PlantEx2_StateId id);

// Thread safe.
char const * PlantEx2_event_id_to_string(PlantEx2_EventId id);

// Generated state machine
struct PlantEx2
{
    // Used internally by state machine. Feel free to inspect, but don't modify.
    PlantEx2_StateId state_id;
    
    // Used internally by state machine. Don't modify.
    PlantEx2_Func ancestor_event_handler;
    
    // Used internally by state machine. Don't modify.
    PlantEx2_Func current_event_handlers[PlantEx2_EventIdCount];
    
    // Used internally by state machine. Don't modify.
    PlantEx2_Func current_state_exit_handler;
};

#endif // PLANTEX2_H
